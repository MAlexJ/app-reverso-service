server:
  port: ${REVERSO_SERVICE_PORT:8080}

  shutdown: graceful

  error:
    include-message: always
    include-stacktrace: always
    whitelabel:
      enabled: true

logging:
  level:
    org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping: TRACE
    org.springframework.web: TRACE

spring:
  config:
    import: optional:file:.env[.properties]

  lifecycle:
    timeout-per-shutdown-phase: 1m

  application:
    name: ${REVERSO_SERVICE_NAME:app_reverso_service}

management:
  endpoint:
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'


springdoc:
  swagger-ui:
    path: /api/documentation

reverso:
  url: https://api.reverso.net/translate/v1/translation
  header:
    key: User-Agent
    value: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36 Edg/125.0.0.0'

kafka:
  topic:
    in: ${CLOUD_KAFKA_USERNAME}-${REVERSO_SERVICE_TOPIC_IN:in-topic}
    out: ${CLOUD_KAFKA_USERNAME}-${REVERSO_SERVICE_TOPIC_OUT:out-topic}
  server:
    bootstrapServer: ${CLOUD_KAFKA_BROKER_URL}
    propertySecurityProtocol: SASL_SSL
    propertySaslMechanism: SCRAM-SHA-256
    propertySaslJaasConfig: org.apache.kafka.common.security.scram.ScramLoginModule required
      username="${CLOUD_KAFKA_USERNAME}" password="${CLOUD_KAFKA_PASSWORD}";
  producer:
    keySerializer: org.apache.kafka.common.serialization.StringSerializer
    valueSerializer: org.springframework.kafka.support.serializer.JsonSerializer
    propertyEnableIdempotence: false
    propertySpringJsonAddTypeHeaders: false
  consumer:
    autoOffsetReset: earliest
    groupId: ${CLOUD_KAFKA_USERNAME}-consumers
    keyDeserializer: org.apache.kafka.common.serialization.StringDeserializer
    valueDeserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    propertySpringJsonTrustedPackages: '*'