server:
  port: ${APP_SERVICE_PORT:8080}

spring:
  config:
    import: optional:file:.env[.properties]
  application:
    name: ${APP_SERVICE_NAME:app-reverso-service}

kafka:
  topic:
    in: ${CLOUD_KAFKA_USERNAME}-${FILTERING_SERVICE_TOPIC_IN:filtering-topic}
    out: ${CLOUD_KAFKA_USERNAME}-${FILTERING_SERVICE_TOPIC_OUT:template-resolver-topic}
  server:
    bootstrapServer: ${CLOUD_KAFKA_BROKER_URL}
    propertySecurityProtocol: SASL_SSL
    propertySaslMechanism: SCRAM-SHA-256
    propertySaslJaasConfig: org.apache.kafka.common.security.scram.ScramLoginModule required
      username="${CLOUD_KAFKA_USERNAME}" password="${CLOUD_KAFKA_PASSWORD}";
  producer:
    keySerializer: org.apache.kafka.common.serialization.StringSerializer
    valueSerializer: org.springframework.kafka.support.serializer.JsonSerializer
    propertyEnableIdempotence: false
    propertySpringJsonAddTypeHeaders: false
  consumer:
    autoOffsetReset: earliest
    groupId: ${CLOUD_KAFKA_USERNAME}-consumers
    keyDeserializer: org.apache.kafka.common.serialization.StringDeserializer
    valueDeserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    propertySpringJsonTrustedPackages: '*'